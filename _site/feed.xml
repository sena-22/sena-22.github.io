<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-02-09T14:22:15+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Reyna</title><subtitle>An amazing website.</subtitle><author><name>Reyna</name></author><entry><title type="html">[HTML] HTML Tag 정리</title><link href="http://localhost:4000/html/tag/" rel="alternate" type="text/html" title="[HTML] HTML Tag 정리" /><published>2023-02-08T00:00:00+09:00</published><updated>2023-02-08T00:00:00+09:00</updated><id>http://localhost:4000/html/tag</id><content type="html" xml:base="http://localhost:4000/html/tag/"><![CDATA[<p>HTML의 태그들을 그때그때 찾아가면서 하다보니 머릿속에서 정리되지 않았다는 생각이 들어 한번에 모아서 정리해보기로 했다.</p>

<h1 id="tag">tag</h1>

<ul>
  <li>부등호(&lt;&gt;)로 묶인 HTML의 기본 구성 요소</li>
  <li>트리 구조로 이루어져 있으며 <code class="language-plaintext highlighter-rouge">tab</code>을 이용하여 들여쓰기를 해서 부모와 자식 관계를 나타낼 수 있다.</li>
</ul>

<h1 id="웹-페이지를-구성하는-태그">웹 페이지를 구성하는 태그</h1>

<h2 id="1-문서-형식-정의-tag">1. 문서 형식 정의 tag</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;!</span><span class="nx">DOCTYPE</span> <span class="nx">html</span><span class="o">&gt;</span>
</code></pre></div></div>

<p>웹 페이지의 형식을 알려주는 태그이다. 문서의 최상단에 위치하며, 대소문자를 구별하지 않는다.</p>

<h2 id="2-html-tag">2. html tag</h2>

<p>모든 요소의 부모 요소이고, 웹 페이지에 하나만 존재한다.</p>

<h2 id="3-head-tag">3. head tag</h2>

<p>웹 브라우저에 보이지 않는 문서 설정, CSS, 자바스크립트 같은 외부 파일 연결</p>

<p>📍 meta tag : 메타데이터 정의에 사용되는 태그. 메타데이터는 브라우저, 검색 엔진 등에 의해 사용된다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">meta</span> <span class="nx">charset</span><span class="o">=</span><span class="dl">"</span><span class="s2">UTF-8</span><span class="dl">"</span> <span class="o">/&gt;</span>
</code></pre></div></div>

<p>웹 문서의 인코딩 방식을 의미한다. UTF-8은 세계 표준 인코딩 방식이다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">meta</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">keywords</span><span class="dl">"</span> <span class="nx">content</span><span class="o">=</span><span class="dl">"</span><span class="s2">HTML, CSS, XML, XHTML, JavaScript</span><span class="dl">"</span><span class="o">&gt;</span>
</code></pre></div></div>

<p>검색엔진 최적화를 위해 사용할 키워드를 정의한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">meta</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">description</span><span class="dl">"</span> <span class="nx">content</span><span class="o">=</span><span class="dl">"</span><span class="s2">웹 페이지에 관한 설명</span><span class="dl">"</span><span class="o">&gt;</span>
</code></pre></div></div>

<p>웹 페이지의 설명을 정의한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">meta</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">viewport</span><span class="dl">"</span> <span class="nx">content</span><span class="o">=</span><span class="dl">"</span><span class="s2">width=device-width, initial-scale=1.0</span><span class="dl">"</span><span class="o">&gt;</span>
</code></pre></div></div>

<p>디바이스 종류별로 화면에 출력할 방식 지정. viewport가 있어야 반응형 웹 페이지를 만들 때 모바일 화면에 결과 출력이 가능하다.</p>

<p><br />
📍 title tag : 문서 제목 정의. 브라우저의 상단 탭에 표시된다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">title</span><span class="o">&gt;</span><span class="nx">문서</span> <span class="nx">제목</span><span class="o">&lt;</span><span class="sr">/title</span><span class="err">&gt;
</span></code></pre></div></div>

<p><br />
📍 link tag : 외부 파일(주로 css)을 연결한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">rel</span><span class="o">=</span><span class="dl">"</span><span class="s2">stylesheet</span><span class="dl">"</span> <span class="nx">href</span><span class="o">=</span><span class="dl">"</span><span class="s2">style.css</span><span class="dl">"</span><span class="o">&gt;</span>
</code></pre></div></div>

<p><br />
📍 script tag : src 속성을 사용하여 javascript 파일을 연결할 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="dl">"</span><span class="s2">app.js</span><span class="dl">"</span> <span class="o">/&gt;</span>
</code></pre></div></div>

<h2 id="4-body-tag">4. body tag</h2>

<p>웹 브라우저에 출력할 내용을 입력한다.</p>

<p><br /></p>

<h1 id="시맨틱-태그">시맨틱 태그</h1>

<ul>
  <li>시맨틱은 ‘의미가 있는, 의미론적인’이라는 뜻으로, <strong>의미를 가진 태그</strong>를 <mark style="background-color: #ffdce0">시맨틱 태그</mark>라고 한다.</li>
  <li>시맨틱 태그는 검색 엔진에 노출이 잘 되고, 개발할 때 요소를 알아보기 쉽기 때문에 사용이 권장된다.</li>
</ul>

<p><img width="800" alt="스크린샷 2023-02-08 오후 9 46 41" src="https://user-images.githubusercontent.com/110877564/217534177-41ea763b-817f-4684-a947-1bd058cee466.png" /></p>

<ul>
  <li>시맨틱 태그를 사용하면 구조가 명확해진다</li>
</ul>

<h2 id="1-header-tag">1. header tag</h2>

<p>웹 문서의 머리말에 해당한다. 로고, 메뉴 등을 지정한다.</p>

<h2 id="2-nav-tag">2. nav tag</h2>

<p>링크를 포함한 메뉴를 그룹화할 때 사용한다.</p>

<h2 id="3-figure-tag">3. figure tag</h2>

<p>멀티미디어 콘텐츠를 그룹화할 때 사용한다.
<code class="language-plaintext highlighter-rouge">&lt;figcaption&gt;</code> 요소를 사용해 설명을 붙일 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">figure</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="nx">img</span> <span class="nx">scr</span><span class="o">=</span><span class="dl">"</span><span class="s2">이미지</span><span class="dl">"</span> <span class="nx">alt</span><span class="o">=</span><span class="dl">"</span><span class="s2">이미지 설명</span><span class="dl">"</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="nx">figcaption</span><span class="o">&gt;</span><span class="nx">이미지</span> <span class="nx">설명</span><span class="o">&lt;</span><span class="sr">/figcaption</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/figure</span><span class="err">&gt;
</span></code></pre></div></div>

<p class="notice--primary"><a href="https://codesandbox.io/s/figure-example-lvxtin">figure tag 예제(CodeSandbox)</a></p>

<h2 id="4-main-tag">4. main tag</h2>

<p>중요한 콘텐츠를 그룹화할 때 사용한다.</p>

<h2 id="5-aside-tag">5. aside tag</h2>

<p>부수 콘텐츠를 그룹화할 때 사용한다. 광고 팝업창, 바로가기를 지정할 때 사용한다.</p>

<h2 id="6-section-tag">6. section tag</h2>

<p>콘텐츠 여러 개를 그룹화할 때 사용한다. 콘텐츠 간의 논리적인 연결고리가 없으면 <code class="language-plaintext highlighter-rouge">&lt;div&gt;</code>요소를 사용하는 것이 바람직하다.</p>

<h2 id="7-article-tag">7. article tag</h2>

<p>개별 콘텐츠를 지정할 때 사용한다. 독립적인 내용을 담아 재사용이 가능하다.</p>

<h2 id="8-footer-tag">8. footer tag</h2>

<p>하단 콘텐츠를 나타낸다.</p>

<h1 id="서식-태그">서식 태그</h1>

<h2 id="1-hgroup">1. hgroup</h2>

<p><code class="language-plaintext highlighter-rouge">&lt;h1&gt;</code>~<code class="language-plaintext highlighter-rouge">&lt;h6&gt;</code> 태그는 문서의 제목을 중요도에 따라 분류해서 쓴다. <code class="language-plaintext highlighter-rouge">&lt;h1&gt;</code>이 가장 중요한 제목에 쓰인다. 단순히 문자 크기를 조절하기 위해 사용하기보다 목차 역할, 콘텐츠의 상하 관계를 표시하기 위해 사용해야 한다.</p>

<h2 id="2-pparagraph-tag">2. p(paragraph) tag</h2>

<p>문단을 지정하는 태그이다.</p>

<h2 id="3-divdivision-tag">3. div(division) tag</h2>

<p>특정 주제의 제목과 여러 문단을 그룹화할 때 사용하는 태그이다. 시맨틱 태그는 아니지만 제일 많이 사용하게 되는 태그이다.</p>

<h2 id="4-span-tag">4. span tag</h2>

<p>인라인 요소 태그를 그룹화할 때 사용한다. <code class="language-plaintext highlighter-rouge">&lt;span&gt;</code> 태그 역시 인라인 태그이다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">span</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="nx">strong</span><span class="o">&gt;</span><span class="nx">인라인</span> <span class="nx">태그</span><span class="o">&lt;</span><span class="nx">strong</span><span class="o">&gt;</span><span class="nx">를</span> <span class="o">&lt;</span><span class="nx">em</span><span class="o">&gt;</span><span class="nx">그룹화</span><span class="o">&lt;</span><span class="sr">/em&gt;할 때 사</span><span class="err">용
</span><span class="o">&lt;</span><span class="sr">/span</span><span class="err">&gt;
</span></code></pre></div></div>

<p class="notice--primary">⭐️ <u><b>div와 span의 차이</b></u> <br />
<strong>div</strong> : 한 줄을 통째로 차지한다. 블록 요소이다.<br />
<strong>span</strong> : 콘텐츠 크기만큼 공간을 차지한다. 인라인 요소이다.
(인라인 요소 안에는 블록 요소가 들어가면 안된다)</p>

<h2 id="5-strong-ememphasized-tag">5. strong, em(emphasized) tag</h2>

<p>특정 문장이나 단어를 강조할 때 사용한다.</p>

<p><code class="language-plaintext highlighter-rouge">&lt;strong&gt;</code> : 볼드체</p>

<p><code class="language-plaintext highlighter-rouge">&lt;em&gt;</code> : 이탤릭체</p>

<p class="notice--primary">⭐️ <u><b> strong과 b의 차이</b></u> <br />
두 요소 모두 볼드체로 보인다. <br />
하지만 <code class="language-plaintext highlighter-rouge">&lt;b&gt;</code> 태그가 단순히 굵은 표시를 나타내는 반면 <code class="language-plaintext highlighter-rouge">&lt;strong&gt;</code> 태그의 경우 중요, 긴급한 의미를 나타낸다.</p>

<p class="notice--primary">⭐️ <u><b>em과 i의 차이</b></u> <br />
두 요소 모두 이탤릭체로 보인다. <br />
<code class="language-plaintext highlighter-rouge">&lt;i&gt;</code> 태그는 기술 용어, 외국어 구절 등 특정 이유로 구분할 때 사용하고,
<code class="language-plaintext highlighter-rouge">&lt;em&gt;</code>은 주위 텍스트와 비교했을 때 강조할 때 사용한다.
단순히 기울임꼴을 사용할 때에는 css의 <code class="language-plaintext highlighter-rouge">font-style:italic</code>을 사용한다.</p>

<h2 id="6-a-tag">6. a tag</h2>

<p>링크를 연결할 때 사용한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">a</span> <span class="nx">href</span><span class="o">=</span><span class="dl">"</span><span class="s2">웹페이지 주소</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">링크</span> <span class="nx">이름</span><span class="o">&lt;</span><span class="sr">/a</span><span class="err">&gt;
</span>
<span class="c1">//새로운 탭을 열어서 링크 이동할 때</span>
<span class="o">&lt;</span><span class="nx">a</span> <span class="nx">href</span><span class="o">=</span><span class="dl">"</span><span class="s2">웹페이지 주소</span><span class="dl">"</span> <span class="nx">target</span><span class="o">=</span><span class="dl">"</span><span class="s2">blank</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">링크</span> <span class="nx">이름</span><span class="o">&lt;</span><span class="sr">/a</span><span class="err">&gt;
</span></code></pre></div></div>

<p>a는 anchor(정박지, 닻), href는 hyper reference(하이퍼 참조)를 의미한다.</p>

<h2 id="7-img-tag">7. img tag</h2>

<p>이미지를 삽입할 때 사용한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">img</span> <span class="nx">src</span><span class="o">=</span><span class="dl">"</span><span class="s2">이미지 경로</span><span class="dl">"</span> <span class="nx">alt</span><span class="o">=</span><span class="dl">"</span><span class="s2">이미지 설명</span><span class="dl">"</span><span class="o">&gt;</span>
</code></pre></div></div>

<p>src는 source, alt는 alternate를 의미한다. alt 속성은 이미지에 설명을 덧붙이는 역할을 하는데, 만약 그림 옆에 직접 설명이 붙어 있다면 null 값을 사용할 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">img</span> <span class="nx">scr</span><span class="o">=</span><span class="dl">"</span><span class="s2">이미지 경로</span><span class="dl">"</span> <span class="nx">alt</span><span class="o">=</span><span class="dl">""</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">strong</span><span class="o">&gt;</span><span class="nx">이미지</span> <span class="nx">설명</span><span class="o">&lt;</span><span class="sr">/strong</span><span class="err">&gt;
</span></code></pre></div></div>

<p class="notice--primary"><a href="https://www.w3.org/WAI/tutorials/images/decorative/#example-3-image-with-adjacent-text-alternative">alt 속성 참고</a></p>

<h2 id="8-br-tag">8. br tag</h2>

<p>원하는 곳에 <code class="language-plaintext highlighter-rouge">&lt;br&gt;</code> 태그를 사용하면 강제로 줄을 바꿀 수 있다. 단, 이 태그를 남용하는 것은 좋지 않다. 스크린 리더가 <code class="language-plaintext highlighter-rouge">&lt;br&gt;</code> 태그를 읽어 글의 흐름이 끊기기 때문이다. <br /> 단락을 구분하고 싶을 때는 <code class="language-plaintext highlighter-rouge">&lt;p&gt;</code> 태그를 사용하고, 간격을 조정할 때는 css 속성을 주는 것이 좋다.</p>

<p class="notice--primary"><a href="https://developer.mozilla.org/ko/docs/Web/HTML/Element/br">br tag 참고</a></p>

<h1 id="목록-태그">목록 태그</h1>

<h2 id="1-ulunordered-list">1. ul(unordered list)</h2>

<p>순서가 없는 목록을 만들 때 사용한다.
<code class="language-plaintext highlighter-rouge">&lt;ul&gt;</code> 태그를 사용할 때는 <code class="language-plaintext highlighter-rouge">&lt;li&gt;</code>태그를 자식 요소로 같이 써야 한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">ul</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="nx">li</span><span class="o">&gt;</span><span class="nx">사과</span><span class="o">&lt;</span><span class="sr">/li</span><span class="err">&gt;
</span>  <span class="o">&lt;</span><span class="nx">li</span><span class="o">&gt;</span><span class="nx">토마토</span><span class="o">&lt;</span><span class="sr">/li</span><span class="err">&gt;
</span>  <span class="o">&lt;</span><span class="nx">li</span><span class="o">&gt;</span><span class="nx">아이스크림</span><span class="o">&lt;</span><span class="sr">/li</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/ul</span><span class="err">&gt;
</span></code></pre></div></div>

<h2 id="2-olordered-list">2. ol(ordered list)</h2>

<p>순서가 있는 목록을 만들 때 사용한다.
<code class="language-plaintext highlighter-rouge">&lt;ol&gt;</code> 태그를 사용할 때에도 <code class="language-plaintext highlighter-rouge">&lt;li&gt;</code>태그를 자식 요소로 같이 써야 한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">ol</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="nx">li</span><span class="o">&gt;</span><span class="mi">1</span><span class="nx">번</span><span class="o">&lt;</span><span class="sr">/li</span><span class="err">&gt;
</span>  <span class="o">&lt;</span><span class="nx">li</span><span class="o">&gt;</span><span class="mi">2</span><span class="nx">번</span><span class="o">&lt;</span><span class="sr">/li</span><span class="err">&gt;
</span>  <span class="o">&lt;</span><span class="nx">li</span><span class="o">&gt;</span><span class="mi">3</span><span class="nx">번</span><span class="o">&lt;</span><span class="sr">/li</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/ol</span><span class="err">&gt;
</span></code></pre></div></div>

<h1 id="폼-태그">폼 태그</h1>

<p>웹 브라우저에서 데이터를 입력받아 서버로 전송하는 태그이다.</p>

<h2 id="1-input-tag">1. input tag</h2>

<p>다양한 정보를 입력받는 태그이다. type 속성을 다르게 지정하여 여러 입력 형태를 만들 수 있다.</p>

<p>📍 input type=”text”</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">label</span><span class="o">&gt;</span><span class="nx">input</span> <span class="nx">요소의</span> <span class="nx">제목</span><span class="o">&lt;</span><span class="sr">/label&gt; /</span><span class="o">/</span> <span class="nx">입력받을</span> <span class="nx">내용이</span> <span class="nx">무엇인지</span> <span class="nx">명시한다</span>
<span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">text</span><span class="dl">"</span> <span class="o">/&gt;</span>
</code></pre></div></div>

<p>텍스트를 입력할 수 있는 필드가 생성된다.
input 태그에 placeholder를 넣으면 input box 안에 예시를 작성할 수 있어 많이 사용했는데, 레이블 대신 placeholder를 사용하는 것은 좋지 않다고 한다.</p>

<p class="notice--primary"><a href="https://seunghayoo.com/2020/02/25/uxox-form-label-placeholder/">레이블 &amp; 플레이스 홀더 참고</a></p>

<p>📍 input type=”password”</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">label</span><span class="o">&gt;</span><span class="nx">비밀번호</span><span class="o">&lt;</span><span class="sr">/label</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">password</span><span class="dl">"</span><span class="o">/&gt;</span>
</code></pre></div></div>

<p>비밀번호를 입력할 수 있는 필드가 생성된다. 보안을 위해 ••• 기호로 표시된다.</p>

<p>📍 input type=”checkbox”</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">label</span><span class="o">&gt;</span><span class="nx">값</span> <span class="mi">1</span><span class="o">&lt;</span><span class="sr">/label</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">checkbox</span><span class="dl">"</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">서버로 전송할 값 1</span><span class="dl">"</span><span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="nx">label</span><span class="o">&gt;</span><span class="nx">값</span> <span class="mi">2</span><span class="o">&lt;</span><span class="sr">/label</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">checkbox</span><span class="dl">"</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">서버로 전송할 값 2</span><span class="dl">"</span><span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="nx">label</span><span class="o">&gt;</span><span class="nx">값</span> <span class="mi">3</span><span class="o">&lt;</span><span class="sr">/label</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">checkbox</span><span class="dl">"</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">서버로 전송할 값 3</span><span class="dl">"</span><span class="o">/&gt;</span>
</code></pre></div></div>

<p>체크박스를 만들 수 있다. 체크된 value 값이 서버로 전송되며, 여러 개를 선택할 수 있다.</p>

<p>📍 input type=”radio”</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">label</span><span class="o">&gt;</span><span class="nx">unit</span> <span class="mi">1</span><span class="o">&lt;</span><span class="sr">/label</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">radio</span><span class="dl">"</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">unit</span><span class="dl">"</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">unit 1</span><span class="dl">"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="nx">label</span><span class="o">&gt;</span><span class="nx">unit</span> <span class="mi">2</span><span class="o">&lt;</span><span class="sr">/label</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">radio</span><span class="dl">"</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">unit</span><span class="dl">"</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">unit 2</span><span class="dl">"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="nx">label</span><span class="o">&gt;</span><span class="nx">unit</span> <span class="mi">3</span><span class="o">&lt;</span><span class="sr">/label</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">radio</span><span class="dl">"</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">unit</span><span class="dl">"</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">unit 3</span><span class="dl">"</span> <span class="o">/&gt;</span>
</code></pre></div></div>

<p>라디오 박스를 만들 수 있다. name 속성을 똑같이 입력하면 하나만 선택할 수 있다.</p>

<p>📍 input type=”file”</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">label</span><span class="o">&gt;</span><span class="nx">첨부</span> <span class="nx">파일</span><span class="o">&lt;</span><span class="sr">/label</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">'</span><span class="s1">file</span><span class="dl">'</span> <span class="o">/&gt;</span>
</code></pre></div></div>

<p>사용자의 컴퓨터에서 특정 파일을 첨부할 수 있다.</p>

<p>📍 input type=”color” <br />
type을 color로 설정하면 버튼이 나타나고, 클릭하면 특정 색상값을 선택할 수 있는 패널이 표시된다.</p>

<p>📍 input type=”date” <br />
날짜를 선택할 수 있는 창이 나타나 특정 날짜의 값을 입력받을 수 있다.</p>

<p>📍 input type=”submit”, type=”reset” <br />
submit은 폼에 입력한 모든 데이터를 서버로 전송하는 버튼을 생성한다.
reset은 입력한 모든 값을 비우는 버튼을 생성한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">submit</span><span class="dl">"</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">버튼 이름</span><span class="dl">"</span><span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">reset</span><span class="dl">"</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">버튼 이름</span><span class="dl">"</span><span class="o">/&gt;</span>
</code></pre></div></div>

<p class="notice--primary"><a href="https://codesandbox.io/s/input-type-example-mueyie?file=/src/App.js">input type 예제</a></p>

<h2 id="2-select-tag">2. select tag</h2>

<p>드롭다운 메뉴를 출력해서 사용자가 선택할 수 있게 해주는 태그이다. 자식 태그로 option을 작성해서 <code class="language-plaintext highlighter-rouge">&lt;option&gt;</code> 태그 사이에 보여줄 값을 넣으면 된다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">select</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="nx">option</span><span class="o">&gt;</span><span class="nx">선택지</span> <span class="mi">1</span><span class="o">&lt;</span><span class="sr">/option</span><span class="err">&gt;
</span>  <span class="o">&lt;</span><span class="nx">option</span><span class="o">&gt;</span><span class="nx">선택지</span> <span class="mi">2</span><span class="o">&lt;</span><span class="sr">/option</span><span class="err">&gt;
</span>  <span class="o">&lt;</span><span class="nx">option</span><span class="o">&gt;</span><span class="nx">선택지</span> <span class="mi">3</span><span class="o">&lt;</span><span class="sr">/option</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/select</span><span class="err">&gt;
</span></code></pre></div></div>

<h2 id="3-textarea-tag">3. textarea tag</h2>

<p>여러 문장의 텍스트를 입력받을 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">textarea</span> <span class="o">/&gt;</span>
</code></pre></div></div>

<h2 id="4-form-tag">4. form tag</h2>

<p>여러가지 폼 요소를 그룹으로 만들어 서버로 한번에 요청할 수 있다.
action과 method 속성을 반드시 지정해야 한다.
action은 특정 주소값이나 파일 위치를 지정하고, method는 입력값의 전송 방식을 지정한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">form</span> <span class="nx">action</span><span class="o">=</span><span class="dl">"</span><span class="s2">전송 위치</span><span class="dl">"</span> <span class="nx">method</span><span class="o">=</span><span class="dl">"</span><span class="s2">post</span><span class="dl">"</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="nx">label</span><span class="o">&gt;</span><span class="nx">ID</span><span class="o">&lt;</span><span class="sr">/label</span><span class="err">&gt;
</span>  <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">text</span><span class="dl">"</span> <span class="o">/&gt;</span>
  <span class="o">&lt;</span><span class="nx">label</span><span class="o">&gt;</span><span class="nx">비밀번호</span><span class="o">&lt;</span><span class="sr">/label</span><span class="err">&gt;
</span>  <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">password</span><span class="dl">"</span> <span class="o">/&gt;</span>
  <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">submit</span><span class="dl">"</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">제출</span><span class="dl">"</span> <span class="o">/&gt;</span>
  <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">reset</span><span class="dl">"</span> <span class="nx">value</span><span class="o">=</span><span class="dl">"</span><span class="s2">초기화</span><span class="dl">"</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="sr">/form</span><span class="err">&gt;
</span></code></pre></div></div>

<p>제출 버튼을 누르면 입력값이 action에서 지정한 위치로 전달된다.</p>

<h1 id="멀티미디어-콘텐츠">멀티미디어 콘텐츠</h1>

<h2 id="1-audio-tag">1. audio tag</h2>

<p>오디오 파일을 재생할 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">audio</span> <span class="nx">src</span><span class="o">=</span><span class="dl">"</span><span class="s2">파일 위치</span><span class="dl">"</span> <span class="nx">controls</span> <span class="nx">autoplay</span> <span class="nx">loop</span> <span class="nx">preload</span> <span class="o">/&gt;</span>
</code></pre></div></div>

<h3 id="audio-태그의-속성">audio 태그의 속성</h3>

<ul>
  <li>controls : 오디오를 재생하는 컨트롤 패널 생성</li>
  <li>autoplay : 자동재생</li>
  <li>loop : 무한반복 재생</li>
  <li>preload : 오디오를 재생하기 전에 파일을 미리 불러옴</li>
</ul>

<h2 id="2-video-tag">2. video tag</h2>

<p>동영상 파일을 재생할 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">video</span> <span class="nx">src</span><span class="o">=</span><span class="dl">"</span><span class="s2">파일 위치</span><span class="dl">"</span> <span class="nx">poster</span><span class="o">=</span><span class="dl">"</span><span class="s2">img.jpg</span><span class="dl">"</span> <span class="nx">controls</span> <span class="nx">autoplay</span> <span class="nx">loop</span> <span class="nx">preload</span> <span class="o">/&gt;</span>
</code></pre></div></div>

<p>audio와 비슷하다.</p>

<h3 id="video-태그의-속성">video 태그의 속성</h3>

<ul>
  <li>muted : 동영상의 소리를 뮤트</li>
  <li>poster : 초기 화면에 보여 줄 이미지를 지정</li>
</ul>

<h3 id="참고">참고</h3>

<p class="notice--primary"><a href="https://poiemaweb.com/html5-tag-basic">웹페이지를 구성하는 기본 태그</a></p>]]></content><author><name>Reyna</name></author><category term="html" /><category term="html" /><category term="tag" /><summary type="html"><![CDATA[html tag]]></summary></entry><entry><title type="html">[Main Project] 메인 프로젝트 회고록</title><link href="http://localhost:4000/main%20project/project-review/" rel="alternate" type="text/html" title="[Main Project] 메인 프로젝트 회고록" /><published>2023-02-07T00:00:00+09:00</published><updated>2023-02-08T00:00:00+09:00</updated><id>http://localhost:4000/main%20project/project-review</id><content type="html" xml:base="http://localhost:4000/main%20project/project-review/"><![CDATA[<p><img src="https://user-images.githubusercontent.com/95217370/215842925-37524a74-c2f4-454c-914f-3d19344bed16.png" /></p>

<p><br />
4주간 진행한 메인 프로젝트가 끝났다.</p>

<p>프로젝트 기간 동안 배웠던 점들에 대해 잊기 전에 기록해두려고 한다.</p>

<h2 id="프로젝트에-관해서">프로젝트에 관해서</h2>

<h3 id="1-서비스-개요">1. 서비스 개요</h3>

<ul>
  <li>서비스명 : 트리덤(tridom) - trip &amp; freedom</li>
  <li>기획 의도 : 코로나 19 제한 완화로 인한 관광객 수 증가, 여행에 관한 서비스의 수요가 증가할 것으로 예상</li>
  <li><a href="bit.ly/3JMheyw">배포 링크</a></li>
</ul>

<h3 id="2-서비스-주요-기능">2. 서비스 주요 기능</h3>

<ul>
  <li>국내 여행 일정 계획 기능 및 구글 지도를 통한 시각화</li>
  <li>여행 일정에 대해 예산 및 비용 등록 기능, 사용량 확인 기능</li>
  <li>게시글 등록을 통한 일정 공유, 좋아요 기능</li>
  <li>유저 페이지 수정, 작성한 일정과 게시글 확인</li>
</ul>

<h2 id="담당-기능">담당 기능</h2>

<h3 id="1-메인-페이지">1. 메인 페이지</h3>

<ul>
  <li>로그인 여부에 따라 다르게 나타나는 메인 페이지</li>
  <li>달력을 통한 날짜 선택 기능</li>
  <li>여행, 게시글 목록 공용 컴포넌트 구현</li>
</ul>

<h3 id="2-게시글-작성-수정-페이지">2. 게시글 작성, 수정 페이지</h3>

<ul>
  <li>여행 선택 페이지 : 게시글로 작성할 여행 선택 페이지</li>
  <li>게시글 작성 페이지</li>
  <li>게시글 수정 페이지 : 게시글 삭제 기능 포함</li>
</ul>

<h3 id="3-유저페이지">3. 유저페이지</h3>

<ul>
  <li>프로필과 작성한 여행, 게시글 조회 기능</li>
  <li>프로필 수정 기능</li>
  <li>회원 탈퇴 기능</li>
</ul>

<h2 id="배운-점">배운 점</h2>

<h3 id="코드를-공유한다는-것">코드를 공유한다는 것</h3>

<ul>
  <li>함께 작업을 하다보니 혼자 할 때와는 달리 다른 사람과 코드를 공유할 일이 많았다. 이때 작업하는 페이지에서만 사용할 것으로 가정하고 코드를 작성했더니 나중에 생각지 못한 문제가 생겨 코드를 계속 수정하게 되었다.코드를 다른 사람도 알기 쉽게, 재사용하기 쉽게 만들어야 고치기에도 수월하다는 점을 알게 되었다.</li>
  <li>초반에 코드 스타일을 맞추지 않았더니 PR을 올릴 때마다 사소한 변경점이 계속 생기는 일이 발생했다. 띄어쓰기나 따옴표 등 몇 가지만 정했는데도 훨씬 편해졌다.</li>
</ul>

<h3 id="중복-코드의-유틸화">중복 코드의 유틸화</h3>

<ul>
  <li>날짜 포맷 라이브러리를 사용하다 변경할 일이 있었는데 컴포넌트마다 가져다 쓰다보니 일일이 변경하느라 고생했다. 유틸 파일로 분리해서 나중에 변경하기 쉽게 고쳤다.</li>
</ul>

<h3 id="상태관리-라이브러리의-필요성">상태관리 라이브러리의 필요성</h3>

<ul>
  <li>초반에 프로젝트의 규모가 크지 않아 상태 관리 라이브러리가 굳이 필요하지 않다고 생각했는데, 지도 api 사용과정에서 생각보다 props drilling이 많이 발생했다. 추후 사용할 일도 많을 것 같아 수료 후 학습해서 이 부분을 보충하고 싶다.</li>
</ul>

<h3 id="깃허브-사용">깃허브 사용</h3>

<ul>
  <li>코드 리뷰 : 코드를 작성하기에 급급해 충돌 여부만 확인 후 merge를 하는 일이 대부분이었다. 그러다보니 코드를 pull 해오고서 문제를 발견하는 일이 생겼다. 코드를 보다 신중하게 살펴보아야 할 필요성을 느꼈다.</li>
  <li>커밋의 세분화 : 커밋을 큰 기능 단위로 나누어서 하다보니 나중에 보기가 어려웠다. 작은 기능 별로 세세하게 커밋하는 습관을 들여야겠다.</li>
</ul>]]></content><author><name>Reyna</name></author><category term="main project" /><category term="project" /><category term="codestates" /><category term="review" /><category term="react" /><summary type="html"><![CDATA[main project review]]></summary></entry><entry><title type="html">[Main Project] 07. Cookies</title><link href="http://localhost:4000/main%20project/3-cookies/" rel="alternate" type="text/html" title="[Main Project] 07. Cookies" /><published>2023-02-06T00:00:00+09:00</published><updated>2023-02-06T00:00:00+09:00</updated><id>http://localhost:4000/main%20project/3-cookies</id><content type="html" xml:base="http://localhost:4000/main%20project/3-cookies/"><![CDATA[<p>메인 프로젝트에서는 <code class="language-plaintext highlighter-rouge">token</code>, <code class="language-plaintext highlighter-rouge">memberId</code> 등의 정보를 저장하기 위해 <code class="language-plaintext highlighter-rouge">react-cookie</code>라는 라이브러리를 사용하기로 했다.</p>

<h3 id="1-설치">1. 설치</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">npm</span> <span class="nx">i</span> <span class="nx">react</span><span class="o">-</span><span class="nx">cookie</span>
</code></pre></div></div>

<h3 id="2-cookie-파일-설정">2. cookie 파일 설정</h3>

<p>쿠키를 사용하기 위한 파일을 만들어 필요한 컴포넌트에서 import 해서 적용하는 방법을 사용했다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">Cookies</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">react-cookie</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">cookies</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Cookies</span><span class="p">();</span>

<span class="c1">//쿠키 저장</span>
<span class="k">export</span> <span class="kd">const</span> <span class="nx">setCookie</span> <span class="o">=</span> <span class="p">(</span><span class="nx">name</span><span class="p">,</span> <span class="nx">value</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">cookies</span><span class="p">.</span><span class="kd">set</span><span class="p">(</span><span class="nx">name</span><span class="p">,</span> <span class="nx">value</span><span class="p">,</span> <span class="p">{</span> <span class="na">path</span><span class="p">:</span> <span class="dl">"</span><span class="s2">/</span><span class="dl">"</span> <span class="p">});</span>
<span class="p">};</span>

<span class="c1">//쿠키 불러오기</span>
<span class="k">export</span> <span class="kd">const</span> <span class="nx">getCookie</span> <span class="o">=</span> <span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">cookies</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="nx">name</span><span class="p">);</span>
<span class="p">};</span>

<span class="c1">//쿠키 삭제</span>
<span class="k">export</span> <span class="kd">const</span> <span class="nx">removeCookie</span> <span class="o">=</span> <span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">cookies</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">name</span><span class="p">,</span> <span class="p">{</span> <span class="na">path</span><span class="p">:</span> <span class="dl">"</span><span class="s2">/</span><span class="dl">"</span> <span class="p">});</span>
<span class="p">};</span>
</code></pre></div></div>

<p>처음에는 <code class="language-plaintext highlighter-rouge">name</code>만 이용해서 쿠키를 저장했는데, 프로젝트를 진행하면서 다른 페이지에서 쿠키가 저장되면서 <code class="language-plaintext highlighter-rouge">path</code>가 여러가지인 토큰이 발급되는 문제가 발생했다. 그래서 경로를 하나로 지정하여 문제를 해결했다.</p>

<h3 id="3-cookie-사용">3. cookie 사용</h3>

<p>쿠키를 설정할 때는 <b>쿠키 이름, 쿠키에 넣을 데이터</b> 순으로 저장한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">setCookie</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">../Util/Cookies</span><span class="dl">"</span><span class="p">;</span>

<span class="nx">setCookie</span><span class="p">(</span><span class="dl">"</span><span class="s2">accessToken</span><span class="dl">"</span><span class="p">,</span> <span class="nx">response</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nx">authorization</span><span class="p">);</span>
<span class="nx">setCookie</span><span class="p">(</span><span class="dl">"</span><span class="s2">memberId</span><span class="dl">"</span><span class="p">,</span> <span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">memberId</span><span class="p">);</span>
</code></pre></div></div>

<p>쿠키를 사용할 때는 저장했던 이름을 사용해서 불러온다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">getCookie</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">../Util/Cookies</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">token</span> <span class="o">=</span> <span class="nx">getCookie</span><span class="p">(</span><span class="dl">"</span><span class="s2">accessToken</span><span class="dl">"</span><span class="p">);</span> <span class="c1">//name이 accessToken인 쿠키를 불러온다.</span>
</code></pre></div></div>

<p>쿠키를 삭제할 때도 이름을 이용하면 된다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">removeCookie</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">../Util/Cookies</span><span class="dl">"</span><span class="p">;</span>

<span class="nx">removeCookie</span><span class="p">(</span><span class="dl">"</span><span class="s2">accessToken</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">removeCookie</span><span class="p">(</span><span class="dl">"</span><span class="s2">memberId</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div>]]></content><author><name>Reyna</name></author><category term="main project" /><category term="project" /><category term="codestates" /><category term="cookie" /><category term="react" /><summary type="html"><![CDATA[react-cookie]]></summary></entry><entry><title type="html">[Main Project] 06. Day.js 적용</title><link href="http://localhost:4000/main%20project/2-dayjs/" rel="alternate" type="text/html" title="[Main Project] 06. Day.js 적용" /><published>2023-02-06T00:00:00+09:00</published><updated>2023-02-06T00:00:00+09:00</updated><id>http://localhost:4000/main%20project/2-dayjs</id><content type="html" xml:base="http://localhost:4000/main%20project/2-dayjs/"><![CDATA[<p>프로젝트를 처음 시작할 때 <code class="language-plaintext highlighter-rouge">moment</code>를 사용해서 날짜 형식을 지정했는데, 콘솔창에 경고문이 계속 생겼다. 알아보니 현재 개발이 중단되었고, 용량 이슈도 있어 대체하기로 했다. 보통 <code class="language-plaintext highlighter-rouge">Day.js</code>가 용량이 적고 <code class="language-plaintext highlighter-rouge">moment</code>와 유사해서 많이 사용되어 프로젝트에서도 바로 적용하기로 했다.</p>

<h3 id="1-설치">1. 설치</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">npm</span> <span class="nx">i</span> <span class="nx">dayjs</span>
</code></pre></div></div>

<h3 id="2-사용">2. 사용</h3>

<p>사용법은 moment와 거의 비슷하다.</p>

<p class="notice--primary"><a href="https://day.js.org/docs/en/parse/string-format">dayjs 공식문서</a></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">dayjs</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">dayjs</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">"</span><span class="s2">dayjs/locale/ko</span><span class="dl">"</span><span class="p">;</span> <span class="c1">//한국어 설정</span>

<span class="kd">const</span> <span class="nx">formatDate</span> <span class="o">=</span> <span class="p">(</span><span class="nx">date</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">dayjs</span><span class="p">(</span><span class="nx">date</span><span class="p">).</span><span class="nx">format</span><span class="p">(</span><span class="dl">"</span><span class="s2">YYYY-MM-DD</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="3-유틸-파일로-만들기">3. 유틸 파일로 만들기</h3>

<p>moment를 필요한 컴포넌트에서 각각 사용했더니 dayjs로 변환할 때 일일이 고치느라 시간이 오래 걸렸다. 그래서 유틸파일로 만들어 꺼내쓸 수 있도록 유틸파일로 바꾸었다.</p>

<p><code class="language-plaintext highlighter-rouge">dayUtil.js</code> 파일을 만들어 포맷을 저장해둔다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//dayUtil.js</span>

<span class="k">import</span> <span class="nx">dayjs</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">dayjs</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">"</span><span class="s2">dayjs/locale/ko</span><span class="dl">"</span><span class="p">;</span>

<span class="k">export</span> <span class="kd">const</span> <span class="nx">formatTomorrow</span> <span class="o">=</span> <span class="p">(</span><span class="nx">date</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">dayjs</span><span class="p">(</span><span class="nx">date</span><span class="p">).</span><span class="nx">add</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="dl">"</span><span class="s2">d</span><span class="dl">"</span><span class="p">).</span><span class="nx">toDate</span><span class="p">();</span>
</code></pre></div></div>

<p>다음과 같이 사용하면 된다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//Calendar.js</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">formatTomorrow</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">../Util/dayUtil</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">tomorrow</span> <span class="o">=</span> <span class="nx">formatTomorrow</span><span class="p">(</span><span class="nx">day</span><span class="p">);</span>
</code></pre></div></div>]]></content><author><name>Reyna</name></author><category term="main project" /><category term="project" /><category term="codestates" /><category term="dayjs" /><category term="react" /><category term="moment" /><summary type="html"><![CDATA[dayjs]]></summary></entry><entry><title type="html">[Main Project] 05. Error Log</title><link href="http://localhost:4000/main%20project/1-error-log/" rel="alternate" type="text/html" title="[Main Project] 05. Error Log" /><published>2023-02-06T00:00:00+09:00</published><updated>2023-02-06T00:00:00+09:00</updated><id>http://localhost:4000/main%20project/1-error-log</id><content type="html" xml:base="http://localhost:4000/main%20project/1-error-log/"><![CDATA[<p>프로젝트 진행 중 발생한 에러와 실제 웹사이트를 사용하며 불편함을 느꼈던 부분들을 정리해보았다.</p>

<h3 id="1-게시글-생성-페이지-에러">1. 게시글 생성 페이지 에러</h3>

<p class="notice--primary">🤔 특정 장소 선택 시 게시글 생성이 되지 않는 문제</p>

<p>구글 api에서 장소 정보를 불러올 때 rating 부분이 존재하지 않을 경우 <code class="language-plaintext highlighter-rouge">null</code> 값으로 들어와서 발생하는 에러로 확인되어 백엔드 쪽에서 초기값을 0.0으로 설정 후 해결되었다.</p>

<h3 id="2-유저-이름-수정-에러">2. 유저 이름 수정 에러</h3>

<p class="notice--primary">🤔 유저 이름에 특수문자, 이모티콘 입력 시 제출은 되고 반영은 되지 않는 문제</p>

<p>유저 이름 제출 시 유효성 검사를 추가했다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">nameRegex</span> <span class="o">=</span> <span class="sr">/^</span><span class="se">[</span><span class="sr">a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣</span><span class="se">]{1,20}</span><span class="sr">$/</span><span class="p">;</span>
    <span class="p">...</span>
<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">nameRegex</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">submitInfo</span><span class="p">.</span><span class="nx">id</span><span class="p">))</span> <span class="p">{</span>
      <span class="nx">alert</span><span class="p">(</span><span class="dl">"</span><span class="s2">영문과 한글 또는 숫자를 1~20자리로 입력하세요.</span><span class="dl">"</span><span class="p">);</span>
      <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="p">...</span>
</code></pre></div></div>

<h3 id="3-게시글-수정-페이지-reset-버튼이-안-되는-에러">3. 게시글 수정 페이지 reset 버튼이 안 되는 에러</h3>

<p class="notice--primary">🤔 reset 버튼을 눌렀을 때 화면 상으로는 리셋되는데 실제로는 저장이 되지 않는 문제</p>

<p>입력값 초기화 시 <code class="language-plaintext highlighter-rouge">useRef</code>를 사용해서 해당 메모를 초기화하는 방식을 사용했는데, <code class="language-plaintext highlighter-rouge">state</code>에는 반영이 안되어서 생긴 문제로 확인되었다. 초기화 시에 해당 <code class="language-plaintext highlighter-rouge">ref</code>와 <code class="language-plaintext highlighter-rouge">state</code>를 함께 초기화하는 방식으로 해결했다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//입력값 초기화</span>
<span class="kd">const</span> <span class="nx">handelClear</span> <span class="o">=</span> <span class="p">(</span><span class="nx">id</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">findIndex</span> <span class="o">=</span> <span class="nx">placeNotes</span><span class="p">.</span><span class="nx">findIndex</span><span class="p">(</span>
    <span class="p">(</span><span class="nx">placeNote</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">placeNote</span><span class="p">.</span><span class="nx">placeId</span><span class="p">)</span> <span class="o">===</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">id</span><span class="p">)</span>
  <span class="p">);</span>

  <span class="kd">const</span> <span class="nx">placeId</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">memoRef</span><span class="p">.</span><span class="nx">current</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span>
    <span class="p">(</span><span class="nx">key</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">key</span><span class="p">)</span> <span class="o">===</span> <span class="nx">id</span>
  <span class="p">);</span>
  <span class="nx">memoRef</span><span class="p">.</span><span class="nx">current</span><span class="p">[</span><span class="nx">placeId</span><span class="p">].</span><span class="nx">value</span> <span class="o">=</span> <span class="dl">""</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">changeNotes</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">placeNotes</span><span class="p">];</span> <span class="c1">//ref, state 같이 변경</span>
  <span class="nx">changeNotes</span><span class="p">[</span><span class="nx">findIndex</span><span class="p">].</span><span class="nx">description</span> <span class="o">=</span> <span class="dl">""</span><span class="p">;</span>
  <span class="nx">setPlaceNotes</span><span class="p">(</span><span class="nx">changeNotes</span><span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<h3 id="4-장소가-없는-경우-에러-발생">4. 장소가 없는 경우 에러 발생</h3>

<p class="notice--primary">🤔 일정 등록 시 장소를 선택하지 않은 경우 다른 페이지에서 에러 발생</p>

<p>장소가 있을 경우에만 <code class="language-plaintext highlighter-rouge">state</code>를 설정하도록 변경했다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//장소가 있을 때만 setState로 위도와 경도 설정</span>
<span class="nx">startCode</span> <span class="o">&amp;&amp;</span>
  <span class="nx">setGeocode</span><span class="p">({</span>
    <span class="na">lat</span><span class="p">:</span> <span class="nx">startCode</span><span class="p">.</span><span class="nx">latitude</span><span class="p">,</span>
    <span class="na">lng</span><span class="p">:</span> <span class="nx">startCode</span><span class="p">.</span><span class="nx">longitude</span><span class="p">,</span>
  <span class="p">});</span>
</code></pre></div></div>

<h3 id="5-게시판-textarea-고정">5. 게시판 textarea 고정</h3>

<p><code class="language-plaintext highlighter-rouge">textarea</code> 태그는 원래 사이즈를 조절할 수 있다. 사이즈를 고정하고 싶을 땐 <code class="language-plaintext highlighter-rouge">resize:none</code>을 사용하면 된다.</p>

<h3 id="6-회원가입-페이지에서-비밀번호-입력-시-볼-수-있는-버튼-만들기">6. 회원가입 페이지에서 비밀번호 입력 시 볼 수 있는 버튼 만들기</h3>

<p>password를 볼 수 있는 상태와 상태를 변경할 수 있는 함수를 만들었다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="p">[</span><span class="nx">showPswd</span><span class="p">,</span> <span class="nx">setShowPswd</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">toggleShowPswd</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">setShowPswd</span><span class="p">(</span><span class="o">!</span><span class="nx">showPswd</span><span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<p>상태에 따라 다른 이미지를 보여준다. 이미지를 클릭 시 상태가 바뀐다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">div</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{</span><span class="nx">toggleShowPswd</span><span class="p">}</span> <span class="nx">className</span><span class="o">=</span><span class="dl">"</span><span class="s2">eye</span><span class="dl">"</span><span class="o">&gt;</span>
  <span class="p">{</span><span class="nx">showPswd</span> <span class="p">?</span> <span class="err">😀</span> <span class="p">:</span> <span class="err">😔</span><span class="p">}</span>
<span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span></code></pre></div></div>

<p>상태가 바뀔 때마다 <code class="language-plaintext highlighter-rouge">input</code>의 <code class="language-plaintext highlighter-rouge">type</code>을 바꿔준다. <code class="language-plaintext highlighter-rouge">type</code>이 <code class="language-plaintext highlighter-rouge">password</code>인 경우 값이 보이지 않고, <code class="language-plaintext highlighter-rouge">text</code>인 경우 입력한 값을 볼 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">input</span>
  <span class="nx">className</span><span class="o">=</span><span class="dl">"</span><span class="s2">input</span><span class="dl">"</span>
  <span class="nx">type</span><span class="o">=</span><span class="p">{</span><span class="nx">showPswd</span> <span class="p">?</span> <span class="dl">"</span><span class="s2">text</span><span class="dl">"</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">password</span><span class="dl">"</span><span class="p">}</span>
  <span class="nx">placeholder</span><span class="o">=</span><span class="dl">"</span><span class="s2">Enter your password</span><span class="dl">"</span>
<span class="o">/&gt;</span>
</code></pre></div></div>

<h3 id="6-활성화된-버튼-색상-바꾸기">6. 활성화된 버튼 색상 바꾸기</h3>

<p>게시판에 조회수순, 최신순 등 여러 방식으로 정렬을 할 수 있는 버튼이 있는데, 어느 버튼을 눌렀는지 보여줄 필요가 있어서 모드에 따른 css를 변경했다.</p>

<p>모드는 <code class="language-plaintext highlighter-rouge">state</code>로 관리했고, 버튼을 눌렀을 때 해당 모드로 바꿔서 api 요청을 하는 방식이었다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="p">[</span><span class="nx">mode</span><span class="p">,</span> <span class="nx">setMode</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">(</span><span class="dl">"</span><span class="s2">boardId</span><span class="dl">"</span><span class="p">);</span>

<span class="o">&lt;</span><span class="nx">button</span>
  <span class="nx">className</span><span class="o">=</span><span class="p">{</span>
    <span class="nx">mode</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">boardId</span><span class="dl">"</span> <span class="p">?</span> <span class="dl">"</span><span class="s2">mode--selected mode--button</span><span class="dl">"</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">mode--button</span><span class="dl">"</span>
  <span class="p">}</span>
  <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">setMode</span><span class="p">(</span><span class="dl">"</span><span class="s2">boardId</span><span class="dl">"</span><span class="p">)}</span>
<span class="o">&gt;</span>
  <span class="nx">최신순</span>
<span class="o">&lt;</span><span class="sr">/button&gt;</span><span class="err">;
</span></code></pre></div></div>

<p>현재 모드의 상태와 버튼의 모드가 일치할 경우 <code class="language-plaintext highlighter-rouge">mode--selected</code>라는 <code class="language-plaintext highlighter-rouge">className</code>을 추가해서 css를 변경했다.</p>]]></content><author><name>Reyna</name></author><category term="main project" /><category term="project" /><category term="codestates" /><category term="error" /><category term="react" /><summary type="html"><![CDATA[프로젝트 진행 중 발생한 에러들]]></summary></entry><entry><title type="html">[Github Blog] 라벨 변경</title><link href="http://localhost:4000/blog/label/" rel="alternate" type="text/html" title="[Github Blog] 라벨 변경" /><published>2023-02-06T00:00:00+09:00</published><updated>2023-02-06T00:00:00+09:00</updated><id>http://localhost:4000/blog/label</id><content type="html" xml:base="http://localhost:4000/blog/label/"><![CDATA[<p>블로그의 날짜가 모두 Updated로 나와서 수정했다.</p>

<p><img width="366" alt="스크린샷 2023-02-06 오후 6 26 05" src="https://user-images.githubusercontent.com/110877564/216954807-409da92a-0856-4413-a615-fde1d2fde846.png" /></p>

<p>처음에는 레이아웃 문제인가 싶어서 __layouts 폴더의 <code class="language-plaintext highlighter-rouge">single.html</code> 파일을 살펴봤다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;strong&gt;</span>
  <span class="nt">&lt;i</span> <span class="na">class=</span><span class="s">"fas fa-fw fa-calendar-alt"</span> <span class="na">aria-hidden=</span><span class="s">"true"</span><span class="nt">&gt;&lt;/i&gt;</span> Date:<span class="nt">&lt;/strong</span>
<span class="nt">&gt;</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">site.data.ui-text[site.locale].date_label</code>에서 설정한 대로 나오는 것 같아서 __data 폴더의 <code class="language-plaintext highlighter-rouge">ui-text.yml</code> 파일을 봤더니 “Update: “ 로 되어 있었다. “Date: “ 로 수정했더니 잘 적용되었다.</p>

<p><img width="366" alt="스크린샷 2023-02-06 오후 8 02 50" src="https://user-images.githubusercontent.com/110877564/216955628-a33bf344-a812-4c38-8a16-cdad63dbe821.png" /></p>]]></content><author><name>Reyna</name></author><category term="blog" /><category term="Blog" /><category term="Github" /><category term="label" /><summary type="html"><![CDATA[라벨 변경하기]]></summary></entry><entry><title type="html">[Main Project] 02. main page 구성</title><link href="http://localhost:4000/main%20project/1-main-page/" rel="alternate" type="text/html" title="[Main Project] 02. main page 구성" /><published>2023-02-03T00:00:00+09:00</published><updated>2023-02-03T00:00:00+09:00</updated><id>http://localhost:4000/main%20project/1-main-page</id><content type="html" xml:base="http://localhost:4000/main%20project/1-main-page/"><![CDATA[<h2 id="1-라우팅">1. 라우팅</h2>

<p>같은 url로 로그인 전과 로그인 후의 메인 페이지를 다르게 나타내는 방법을 사용했다. <br />
프로젝트에서 리액트를 사용했기 때문에 <code class="language-plaintext highlighter-rouge">react-router-dom</code>을 사용해서 라우팅 작업을 해주었다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//app.js</span>

<span class="k">import</span> <span class="p">{</span> <span class="nx">useEffect</span><span class="p">,</span> <span class="nx">useState</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Route</span><span class="p">,</span> <span class="nx">Routes</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-router-dom</span><span class="dl">'</span><span class="p">;</span>

<span class="k">import</span> <span class="nx">Home</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./Pages/Home</span><span class="dl">'</span><span class="p">;</span> <span class="c1">//만들어둔 페이지를 불러왔다</span>
<span class="k">import</span> <span class="nx">Main</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./Pages/Main</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">function</span> <span class="nx">App</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="p">[</span><span class="nx">isLoggedIn</span><span class="p">,</span> <span class="nx">setIsLoggedIn</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>

    <span class="p">...</span>

  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;&gt;</span>
      <span class="o">&lt;</span><span class="nx">Routes</span><span class="o">&gt;</span>
       <span class="o">&lt;</span><span class="nx">Route</span> <span class="nx">path</span><span class="o">=</span><span class="dl">"</span><span class="s2">/</span><span class="dl">"</span> <span class="nx">element</span><span class="o">=</span><span class="p">{</span><span class="nx">isLoggedIn</span> <span class="p">?</span> <span class="o">&lt;</span><span class="nx">Main</span> <span class="o">/&gt;</span> <span class="p">:</span> <span class="o">&lt;</span><span class="nx">Home</span> <span class="o">/&gt;</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>       <span class="p">...</span>
      <span class="o">&lt;</span><span class="sr">/Routes</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/</span><span class="err">&gt;
</span>  <span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<p>로그인 여부를 상태로 만들어 로그인 되었을 경우에는 <code class="language-plaintext highlighter-rouge">Main</code> 페이지가, 로그인이 되지 않은 경우에는 <code class="language-plaintext highlighter-rouge">Home</code> 페이지가 나타난다. 로그인 상태는 <code class="language-plaintext highlighter-rouge">token</code>과 <code class="language-plaintext highlighter-rouge">memberId</code> 등으로 판별했다.</p>

<h2 id="2-home-page">2. Home Page</h2>

<h3 id="-구조">📃 구조</h3>

<p><code class="language-plaintext highlighter-rouge">Home</code> 페이지와 <code class="language-plaintext highlighter-rouge">Main</code> 페이지가 동일하게 일정 추가 기능을 가지고 있기 때문에 <code class="language-plaintext highlighter-rouge">Home</code> 페이지를 컴포넌트화 시켜 <code class="language-plaintext highlighter-rouge">Main</code> 페이지에서 사용하였다.</p>

<p>로그인 여부에 따라 <code class="language-plaintext highlighter-rouge">className</code>을 다르게 만들고, <mark style="background-color: #ffdce0">날짜</mark>, <mark style="background-color: #ffdce0">도시</mark>를 선택한 후 비로그인 상태에서는 로그인 화면으로, 로그인 상태에서는 바로 일정 등록 페이지로 갈 수 있도록 만들었다.</p>

<h3 id="-autocomplete">📃 AutoComplete</h3>

<p>도시 선택의 경우 DB에 저장된 도시 목록을 불러와 자동 완성 기능을 사용할 수 있도록 구현했다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="p">[</span><span class="nx">city</span><span class="p">,</span> <span class="nx">setCity</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">();</span>
</code></pre></div></div>

<p>도시 목록을 불러와 <code class="language-plaintext highlighter-rouge">city</code>에 담아준다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">useEffect</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">inputValue</span> <span class="o">===</span> <span class="dl">""</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">setHasText</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>
    <span class="nx">setOptions</span><span class="p">([]);</span>
    <span class="nx">setSearch</span> <span class="o">&amp;&amp;</span> <span class="nx">setSearch</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="nx">setOptions</span><span class="p">(</span><span class="nx">matchStock</span><span class="p">(</span><span class="nx">city</span><span class="p">,</span> <span class="nx">inputValue</span><span class="p">));</span>
    <span class="nx">handleDestination</span><span class="p">(</span><span class="nx">inputValue</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">},</span> <span class="p">[</span><span class="nx">inputValue</span><span class="p">]);</span>
</code></pre></div></div>

<p>검색창에 값을 입력할 때마다 <code class="language-plaintext highlighter-rouge">options</code> 배열이 업데이트 된다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">matchStock</span> <span class="o">=</span> <span class="p">(</span><span class="nx">city</span><span class="p">,</span> <span class="nx">inputValue</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">inputValue</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">[];</span>
  <span class="p">}</span>

  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nb">Number</span><span class="p">(</span><span class="nx">inputValue</span><span class="p">))</span> <span class="o">&amp;&amp;</span> <span class="nx">inputValue</span><span class="p">.</span><span class="nx">length</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">[];</span>
  <span class="p">}</span>

  <span class="k">return</span> <span class="nx">city</span>
    <span class="p">.</span><span class="nx">filter</span><span class="p">((</span><span class="nx">option</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="k">return</span> <span class="nx">isInitialMatch</span><span class="p">(</span><span class="nx">inputValue</span><span class="p">,</span> <span class="nx">option</span><span class="p">);</span>
    <span class="p">})</span>
    <span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">option</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="k">return</span> <span class="nx">option</span><span class="p">;</span>
    <span class="p">})</span>
    <span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">8</span><span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">options</code>에 보여줄 값을 제어하는 부분. 도시 목록 중에서 <code class="language-plaintext highlighter-rouge">isInitialMatch</code> 함수에서 <code class="language-plaintext highlighter-rouge">true</code> 값이 나온 도시만 필터링한다. 도시 수가 많아 상위 일부분만 보여주도록 만들었다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">isInitialMatch</span> <span class="o">=</span> <span class="p">(</span><span class="nx">inputValue</span><span class="p">,</span> <span class="nx">target</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">reg</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">inputValue</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">""</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="nx">pattern</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="dl">"</span><span class="s2">.*?</span><span class="dl">"</span><span class="p">),</span> <span class="dl">"</span><span class="s2">i</span><span class="dl">"</span><span class="p">);</span>
  <span class="kd">const</span> <span class="nx">matches</span> <span class="o">=</span> <span class="nx">reg</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">target</span><span class="p">);</span>
  <span class="k">return</span> <span class="nb">Boolean</span><span class="p">(</span><span class="nx">matches</span><span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<p>초성 검색이 일치하면 참이 나오는 함수. 로직을 잘 이해한 건 아니라 추후 포스팅할 예정이다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="o">&lt;</span><span class="nx">input</span>
          <span class="nx">className</span><span class="o">=</span><span class="dl">"</span><span class="s2">input--large-icon</span><span class="dl">"</span>
          <span class="nx">onChange</span><span class="o">=</span><span class="p">{</span><span class="nx">handleInputChange</span><span class="p">}</span>
          <span class="nx">value</span><span class="o">=</span><span class="p">{</span><span class="nx">inputValue</span><span class="p">}</span>
          <span class="nx">placeholder</span><span class="o">=</span><span class="dl">"</span><span class="s2">Search Destination ex. 서울, 부산...</span><span class="dl">"</span>
          <span class="nx">onKeyDown</span><span class="o">=</span><span class="p">{</span><span class="nx">handleKeyDown</span><span class="p">}</span> <span class="c1">//enter를 누르면 선택됨</span>
          <span class="nx">ref</span><span class="o">=</span><span class="p">{</span><span class="nx">inputRef</span><span class="p">}</span>
        <span class="o">&gt;&lt;</span><span class="sr">/input</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">className</span><span class="o">=</span><span class="dl">"</span><span class="s2">clearbtn</span><span class="dl">"</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{</span><span class="nx">handleClear</span><span class="p">}</span><span class="o">&gt;</span>
          <span class="nx">Clear</span>
        <span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>      <span class="p">{</span><span class="nx">hasText</span> <span class="o">&amp;&amp;</span> <span class="p">(</span>
        <span class="o">&lt;</span><span class="nx">DropDown</span>
          <span class="nx">options</span><span class="o">=</span><span class="p">{</span><span class="nx">options</span><span class="p">}</span>
          <span class="nx">handleDropDownClick</span><span class="o">=</span><span class="p">{</span><span class="nx">handleDropDownClick</span><span class="p">}</span>
          <span class="nx">activeSuggestion</span><span class="o">=</span><span class="p">{</span><span class="nx">activeSuggestion</span><span class="p">}</span>
        <span class="sr">/</span><span class="err">&gt;
</span>      <span class="p">)}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">input</code> 창에 텍스트가 있을 때만 DropDown 컴포넌트가 활성화된다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">handleKeyDown</span> <span class="o">=</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="c1">//enter 키를 누르면 input 값이 활성화된 옵션으로 변경</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span> <span class="o">===</span> <span class="mi">13</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">inputValue</span> <span class="o">===</span> <span class="dl">""</span><span class="p">)</span> <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">reload</span><span class="p">();</span>
    <span class="nx">setInputValue</span><span class="p">(</span><span class="nx">options</span><span class="p">[</span><span class="nx">activeSuggestion</span><span class="p">]);</span>
    <span class="nx">setActiveSuggestion</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="nx">setHasText</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>
    <span class="nx">handleSearch</span> <span class="o">&amp;&amp;</span> <span class="nx">handleSearch</span><span class="p">();</span>
  <span class="p">}</span>

  <span class="c1">// arrow 키를 누르면 활성화된 옵션 -1</span>
  <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span> <span class="o">===</span> <span class="mi">38</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">activeSuggestion</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="nx">setActiveSuggestion</span><span class="p">(</span><span class="nx">activeSuggestion</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="c1">// arrow 키를 누르면 활성화된 옵션 +1</span>
  <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span> <span class="o">===</span> <span class="mi">40</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">activeSuggestion</span> <span class="o">===</span> <span class="nx">options</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="nx">setActiveSuggestion</span><span class="p">(</span><span class="nx">activeSuggestion</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

<p>드롭다운에서 키보드로 선택 값을 변경할 수 있는 함수.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/* 자동완성 배열(options)에 들어간 값들이 드롭다운으로 보여지는 부분 */</span>
<span class="k">export</span> <span class="kd">const</span> <span class="nx">DropDown</span> <span class="o">=</span> <span class="p">({</span>
  <span class="nx">options</span><span class="p">,</span>
  <span class="nx">handleDropDownClick</span><span class="p">,</span>
  <span class="nx">activeSuggestion</span><span class="p">,</span>
<span class="p">})</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">DropDownContainer</span><span class="o">&gt;</span>
      <span class="p">{</span><span class="nx">options</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">option</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="kd">let</span> <span class="nx">className</span><span class="p">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="nx">index</span> <span class="o">===</span> <span class="nx">activeSuggestion</span><span class="p">)</span> <span class="p">{</span>
          <span class="nx">className</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">active</span><span class="dl">"</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="p">(</span>
          <span class="o">&lt;</span><span class="nx">li</span>
            <span class="nx">key</span><span class="o">=</span><span class="p">{</span><span class="nx">option</span><span class="p">}</span>
            <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">handleDropDownClick</span><span class="p">(</span><span class="nx">option</span><span class="p">)}</span> <span class="c1">//클릭한 값이 inputValue에 들어감</span>
            <span class="nx">className</span><span class="o">=</span><span class="p">{</span><span class="nx">className</span><span class="p">}</span>
          <span class="o">&gt;</span>
            <span class="p">{</span><span class="nx">option</span><span class="p">}</span>
          <span class="o">&lt;</span><span class="sr">/li</span><span class="err">&gt;
</span>        <span class="p">);</span>
      <span class="p">})}</span>
    <span class="o">&lt;</span><span class="sr">/DropDownContainer</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<p>초성 단위로 검색 결과가 드롭다운으로 보이고, 현재 활성화된 값의 인덱스가 <code class="language-plaintext highlighter-rouge">activeSuggestion</code>이 된다.</p>

<p><code class="language-plaintext highlighter-rouge">inputValue</code>에 <code class="language-plaintext highlighter-rouge">options[activeSuggestion]</code>의 값이 담기고, 결과적으로 <code class="language-plaintext highlighter-rouge">Home</code> 페이지에서 선언된 <code class="language-plaintext highlighter-rouge">destination</code>에 <code class="language-plaintext highlighter-rouge">inputValue</code> 값이 들어가게 된다.</p>

<p class="notice--primary">🤔 경주를 검색할 경우 정확한 지역검색이 되지 않는데 아직 해결방법을 찾지 못했다.</p>

<p><img width="362" alt="스크린샷 2023-02-03 오전 10 20 33" src="https://user-images.githubusercontent.com/110877564/216488478-5a70a53d-ab70-4217-9ae8-5d160f00d59c.png" /></p>

<p><br /></p>

<h2 id="3-main-page">3. Main Page</h2>

<p>위에서 만든 <code class="language-plaintext highlighter-rouge">Home</code> 페이지의 일정 선택 기능과 로그인 사용자가 작성한 여행, 게시글, 전체 게시판에서 5개의 글을 볼 수 있는 페이지. 5개의 글은 기본적으로 최신순으로 5개를 렌더링하며, 좋아요 순, 조회수 순으로도 변경이 가능하다. 여행, 게시글, 게시판은 모두 각각 별개의 컴포넌트로 만들어 <code class="language-plaintext highlighter-rouge">Main</code> 페이지에서는 불러오기만 했다.</p>]]></content><author><name>Reyna</name></author><category term="main project" /><category term="project" /><category term="codestates" /><category term="page" /><category term="react" /><summary type="html"><![CDATA[main page]]></summary></entry><entry><title type="html">[Main Project] 04. 게시글 작성, 수정 페이지</title><link href="http://localhost:4000/main%20project/3-board/" rel="alternate" type="text/html" title="[Main Project] 04. 게시글 작성, 수정 페이지" /><published>2023-02-03T00:00:00+09:00</published><updated>2023-02-06T00:00:00+09:00</updated><id>http://localhost:4000/main%20project/3-board</id><content type="html" xml:base="http://localhost:4000/main%20project/3-board/"><![CDATA[<h2 id="1-라우팅">1. 라우팅</h2>

<p>프로젝트의 게시글은 만들었던 <u>일정을 바탕으로 메모와 감상을 추가</u>하는 형식으로 이루어져 있다. 따라서 게시글을 작성할 때에는 먼저 <mark style="background-color: #ffdce0">어떤 일정을 게시글로 만들 것인지 선택하는 페이지</mark>가 필요했다. 또한 작성된 게시글도 렌더링하여 이미 작성된 게시글을 수정하는 기능도 이 페이지에 넣었다.</p>

<p>따라서 게시글/일정 선택 페이지, 게시글 추가 페이지, 게시글 수정 페이지로 나눴다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="c1">//app.js</span>

    <span class="p">...</span>

  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;&gt;</span>
      <span class="o">&lt;</span><span class="nx">Routes</span><span class="o">&gt;</span>
        <span class="p">{</span><span class="cm">/*  /!*게시글 작성 시작을 위한 여행선택 페이지*!/*/</span><span class="p">}</span>
        <span class="o">&lt;</span><span class="nx">Route</span> <span class="nx">path</span><span class="o">=</span><span class="dl">"</span><span class="s2">/board/plan</span><span class="dl">"</span> <span class="nx">element</span><span class="o">=</span><span class="p">{</span><span class="o">&lt;</span><span class="nx">WriteBoard</span> <span class="o">/&gt;</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>        <span class="p">{</span><span class="cm">/*  /!*게시글 수정 페이지*!/*/</span><span class="p">}</span>
        <span class="o">&lt;</span><span class="nx">Route</span> <span class="nx">path</span><span class="o">=</span><span class="dl">"</span><span class="s2">/board/edit/:boardId</span><span class="dl">"</span> <span class="nx">element</span><span class="o">=</span><span class="p">{</span><span class="o">&lt;</span><span class="nx">EditSingleBoard</span> <span class="o">/&gt;</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>        <span class="p">{</span><span class="cm">/*  /!*게시글 작성 페이지*!/*/</span><span class="p">}</span>
        <span class="o">&lt;</span><span class="nx">Route</span> <span class="nx">path</span><span class="o">=</span><span class="dl">"</span><span class="s2">/board/plan/:planId</span><span class="dl">"</span> <span class="nx">element</span><span class="o">=</span><span class="p">{</span><span class="o">&lt;</span><span class="nx">WriteSingleBoard</span> <span class="o">/&gt;</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>       <span class="p">...</span>
      <span class="o">&lt;</span><span class="sr">/Routes</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/</span><span class="err">&gt;
</span>  <span class="p">)</span>

  <span class="p">...</span>
</code></pre></div></div>

<h2 id="2-여행게시글-선택-페이지">2. 여행/게시글 선택 페이지</h2>

<p>여행, 게시글을 선택하기 위해 앞서 <code class="language-plaintext highlighter-rouge">main</code> 페이지와 <code class="language-plaintext highlighter-rouge">user</code> 페이지에서 이용했던 작성한 여행, 게시글 컴포넌트를 재사용했다.</p>

<p>기본 틀은 같지만 어디서 클릭하느냐에 따라 조회/작성/수정 페이지가 각각 다르게 나타나야 하는 문제가 생겼다. 처음에는 컴포넌트마다 모드를 props로 바로 넘겨줬는데, 멘토님의 조언으로 모드를 유틸파일로 빼서 어떤 모드가 있는지 알기 쉽게 만드는 방식으로 변경했다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//Util.constants.js</span>
<span class="k">export</span> <span class="kd">const</span> <span class="nx">Mode</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">Write</span><span class="p">:</span> <span class="dl">"</span><span class="s2">write</span><span class="dl">"</span><span class="p">,</span>
  <span class="na">Plan</span><span class="p">:</span> <span class="dl">"</span><span class="s2">plan</span><span class="dl">"</span><span class="p">,</span>
  <span class="na">Edit</span><span class="p">:</span> <span class="dl">"</span><span class="s2">edit</span><span class="dl">"</span><span class="p">,</span>
<span class="p">};</span>
</code></pre></div></div>

<p>이렇게 유틸 파일로 만들면 모드에 어떤 종류가 있는지 알기 쉽다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//WriteBoard.js</span>
<span class="o">&lt;</span><span class="nx">MyTrips</span> <span class="nx">mode</span><span class="o">=</span><span class="dl">"</span><span class="s2">write</span><span class="dl">"</span> <span class="o">/&gt;</span>
</code></pre></div></div>

<p>모드를 설정해서 같은 컴포넌트를 여러 곳에서 다르게 렌더링할 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//Components/user</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Mode</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">../../Util/constants</span><span class="dl">'</span><span class="p">;</span>
<span class="p">...</span>
<span class="kd">const</span> <span class="nx">MyTrips</span> <span class="o">=</span> <span class="p">({</span><span class="nx">mode</span><span class="p">})</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="p">...</span>
  <span class="p">{</span><span class="nx">tripList</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">trip</span> <span class="o">=&gt;</span> <span class="p">(</span>
          <span class="o">&lt;</span><span class="nx">div</span>
            <span class="nx">className</span><span class="o">=</span><span class="dl">"</span><span class="s2">my-trips__card</span><span class="dl">"</span>
            <span class="nx">key</span><span class="o">=</span><span class="p">{</span><span class="nx">trip</span><span class="p">.</span><span class="nx">planId</span><span class="p">}</span>
            <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">handleNavigate</span><span class="p">(</span><span class="nx">trip</span><span class="p">)}</span>
          <span class="o">&gt;</span>
            <span class="o">&lt;</span><span class="nx">img</span> <span class="nx">alt</span><span class="o">=</span><span class="dl">"</span><span class="s2">place_image</span><span class="dl">"</span> <span class="nx">src</span><span class="o">=</span><span class="p">{</span><span class="nx">trip</span><span class="p">.</span><span class="nx">city</span><span class="p">.</span><span class="nx">cityImage</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>            <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">className</span><span class="o">=</span><span class="dl">"</span><span class="s2">meta_title</span><span class="dl">"</span><span class="o">&gt;</span><span class="p">{</span><span class="nx">trip</span><span class="p">.</span><span class="nx">planTitle</span><span class="p">}</span><span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>            <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">className</span><span class="o">=</span><span class="dl">"</span><span class="s2">meta_content</span><span class="dl">"</span><span class="o">&gt;</span>
              <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
                <span class="p">{</span><span class="nx">formatDateKo</span><span class="p">(</span><span class="nx">trip</span><span class="p">.</span><span class="nx">startDate</span><span class="p">)}</span> <span class="o">-</span> <span class="p">{</span><span class="nx">formatDateKo</span><span class="p">(</span><span class="nx">trip</span><span class="p">.</span><span class="nx">endDate</span><span class="p">)}</span>
              <span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>            <span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>          <span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>    <span class="p">...</span>
  <span class="p">}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">MyTrips</code>는 여행 목록을 보여주는 컴포넌트이다. 게시글 작성 페이지에서는 아직 게시글을 작성하지 않은 여행만 보여줘야 했기 때문에 모든 여행 요청을 불러와 <code class="language-plaintext highlighter-rouge">boardCheck</code>가 <code class="language-plaintext highlighter-rouge">false</code>인 여행만 보여주었다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">handleNavigate</span> <span class="o">=</span> <span class="p">(</span><span class="nx">trip</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">navigate</span><span class="p">(</span>
    <span class="nx">mode</span> <span class="o">===</span> <span class="nx">Mode</span><span class="p">.</span><span class="nx">Plan</span>
      <span class="p">?</span> <span class="s2">`/itinerary/</span><span class="p">${</span><span class="nx">trip</span><span class="p">.</span><span class="nx">planId</span><span class="p">}</span><span class="s2">`</span>
      <span class="p">:</span> <span class="s2">`/board/plan/</span><span class="p">${</span><span class="nx">trip</span><span class="p">.</span><span class="nx">planId</span><span class="p">}</span><span class="s2">`</span>
  <span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<p>목록 중 하나를 클릭 했을 때 내려받은 모드에 따라 다른 곳으로 이동한다.</p>

<h2 id="3-게시글-작성-페이지">3. 게시글 작성 페이지</h2>

<p>게시글은 만들었던 일정을 기반으로 작성하기 때문에 선택 페이지에서 여행을 선택할 때 해당 <code class="language-plaintext highlighter-rouge">planId</code>를 파라미터로 가진 주소로 이동하게 만든 후, 작성 페이지에서 <code class="language-plaintext highlighter-rouge">useParams</code>를 이용하여 해당 여행 일정을 불러와서 페이지를 구성했다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">useParams</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">react-router-dom</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">const</span> <span class="p">{</span> <span class="nx">planId</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">useParams</span><span class="p">();</span>
</code></pre></div></div>

<p>이런 식으로 파라미터를 가져오는 것이 가능하다.</p>

<p>작성 페이지에서 어려웠던 부분은 장소별 메모를 api 형식에 맞춰서 만드는 부분이었다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
    <span class="dl">"</span><span class="s2">placeDesc</span><span class="dl">"</span> <span class="p">:</span> <span class="p">[</span>
        <span class="p">{</span>
            <span class="dl">"</span><span class="s2">placeId</span><span class="dl">"</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
            <span class="dl">"</span><span class="s2">description</span><span class="dl">"</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">desc</span><span class="dl">"</span>
        <span class="p">},</span>
        <span class="p">{</span>
            <span class="dl">"</span><span class="s2">placeId</span><span class="dl">"</span> <span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
            <span class="dl">"</span><span class="s2">description</span><span class="dl">"</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">desc</span><span class="dl">"</span>
        <span class="p">},</span>
    <span class="p">]</span>
<span class="p">}</span>
</code></pre></div></div>

<p>객체 안에 키 값이 문자열이고, 값에 <code class="language-plaintext highlighter-rouge">index</code>를 넣어야 했는데, 지금까지는 <code class="language-plaintext highlighter-rouge">{index : "내용"}</code>과 같이 해당 <code class="language-plaintext highlighter-rouge">index</code>를 키로, 내용을 값으로 넣는 식으로만 만들었어서 생소했다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="p">[</span><span class="nx">placeNotes</span><span class="p">,</span> <span class="nx">setPlaceNotes</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">([]);</span>

 <span class="k">return</span> <span class="p">(</span>
  <span class="p">...</span>
    <span class="o">&lt;</span><span class="nx">textarea</span>
      <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">text</span><span class="dl">"</span>
      <span class="nx">name</span><span class="o">=</span><span class="p">{</span><span class="nx">place</span><span class="p">.</span><span class="nx">placeId</span><span class="p">}</span>
      <span class="nx">onChange</span><span class="o">=</span><span class="p">{</span><span class="nx">e</span> <span class="o">=&gt;</span> <span class="nx">handleChangeNote</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span>
     <span class="sr">/</span><span class="err">&gt;
</span>    <span class="p">...</span>
 <span class="p">)</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">body</code>에 넣을 배열을 상태로 만들고, 노트를 입력하는 <code class="language-plaintext highlighter-rouge">textarea</code>의 값이 변경되면 <code class="language-plaintext highlighter-rouge">handleChangeNote</code> 함수가 실행된다. <code class="language-plaintext highlighter-rouge">name</code>으로 장소의 id를 넣어두었다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//장소별 note 변경</span>
<span class="kd">const</span> <span class="nx">handleChangeNote</span> <span class="o">=</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">findIndex</span> <span class="o">=</span> <span class="nx">placeNotes</span><span class="p">.</span><span class="nx">findIndex</span><span class="p">(</span>
    <span class="p">(</span><span class="nx">comment</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">comment</span><span class="p">.</span><span class="nx">placeId</span><span class="p">)</span> <span class="o">===</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span>
  <span class="p">);</span>

  <span class="k">if</span> <span class="p">(</span><span class="nx">findIndex</span> <span class="o">===</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">setPlaceNotes</span><span class="p">([</span>
      <span class="p">...</span><span class="nx">placeNotes</span><span class="p">,</span>
      <span class="p">{</span> <span class="na">placeId</span><span class="p">:</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">name</span><span class="p">),</span> <span class="na">description</span><span class="p">:</span> <span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">value</span> <span class="p">},</span>
    <span class="p">]);</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">changeNotes</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">placeNotes</span><span class="p">];</span>
    <span class="nx">changeNotes</span><span class="p">[</span><span class="nx">findIndex</span><span class="p">].</span><span class="nx">description</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span>
    <span class="nx">setPlaceNotes</span><span class="p">(</span><span class="nx">changeNotes</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">findIndex</code>라는 변수를 선언해서 placeNotes에 메모를 작성한 장소의 id와 동일한 <code class="language-plaintext highlighter-rouge">placeId</code>를 가진 인덱스가 있는지 판별한다.</p>

<p>만약 없다면 -1이 나올 것이고, 그 경우에는 새로운 객체를 추가해서 장소의 id가 <code class="language-plaintext highlighter-rouge">placeId</code>, 설명이 <code class="language-plaintext highlighter-rouge">description</code>라는 키의 값으로 들어간다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">setPlaceNotes</span><span class="p">([</span>
  <span class="p">...</span><span class="nx">placeNotes</span><span class="p">,</span>
  <span class="p">{</span> <span class="na">placeId</span><span class="p">:</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">name</span><span class="p">),</span> <span class="na">description</span><span class="p">:</span> <span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">value</span> <span class="p">},</span>
<span class="p">]);</span>
</code></pre></div></div>

<p>반면 동일한 id가 있다면 배열을 통째로 복사해서 복사한 배열에서 해당 인덱스의 <code class="language-plaintext highlighter-rouge">description</code>의 값만 바꾼다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">changeNotes</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">placeNotes</span><span class="p">];</span>
<span class="nx">changeNotes</span><span class="p">[</span><span class="nx">findIndex</span><span class="p">].</span><span class="nx">description</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span>
<span class="nx">setPlaceNotes</span><span class="p">(</span><span class="nx">changeNotes</span><span class="p">);</span>
</code></pre></div></div>

<h2 id="4-게시글-수정-페이지">4. 게시글 수정 페이지</h2>

<p>수정 페이지는 작성 페이지와 거의 동일한 구조를 가지고 있다.
원래 작성했던 내용을 불러와서 띄워줘야 하는 부분만 달랐는데, 데이터 구조가 복잡한 만큼 <code class="language-plaintext highlighter-rouge">map</code>을 써서 초기값을 설정하다보니 코드가 지저분해졌다는 생각이 든다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nx">res</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">days</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">day</span> <span class="o">=&gt;</span>
          <span class="nx">day</span><span class="p">.</span><span class="nx">placeDetails</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">place</span> <span class="o">=&gt;</span>
            <span class="nx">setPlaceNotes</span><span class="p">([</span>
              <span class="p">...</span><span class="nx">placeNotes</span><span class="p">,</span>
              <span class="p">{</span>
                <span class="na">placeId</span><span class="p">:</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">place</span><span class="p">.</span><span class="nx">placeId</span><span class="p">),</span>
                <span class="na">description</span><span class="p">:</span> <span class="nx">place</span><span class="p">.</span><span class="nx">description</span><span class="p">,</span>
              <span class="p">},</span>
            <span class="p">]),</span>
          <span class="p">),</span>
</code></pre></div></div>

<p>수정 페이지에서는 게시글 삭제도 가능하다. 삭제 후에는 다시 계획할 수 있는 페이지로 이동하도록 만들었다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">handleDeleteLog</span> <span class="o">=</span> <span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">confirm</span><span class="p">(</span><span class="dl">"</span><span class="s2">게시글을 삭제하시겠습니까?</span><span class="dl">"</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">await</span> <span class="nx">axios</span><span class="p">({</span>
      <span class="na">method</span><span class="p">:</span> <span class="dl">"</span><span class="s2">DELETE</span><span class="dl">"</span><span class="p">,</span>
      <span class="na">url</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REACT_APP_API_URL</span><span class="p">}</span><span class="s2">/board/</span><span class="p">${</span><span class="nx">boardId</span><span class="p">}</span><span class="s2">`</span><span class="p">,</span>
      <span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">Authorization</span><span class="p">:</span> <span class="nx">token</span><span class="p">,</span>
      <span class="p">},</span>
    <span class="p">}).</span><span class="nx">then</span><span class="p">((</span><span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">navigate</span><span class="p">(</span><span class="s2">`/board/plan`</span><span class="p">));</span>
  <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

<p>삭제나 회원 탈퇴 같은 중요한 선택의 경우 확인 과정을 통해 실수를 방지할 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">if</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">confirm</span><span class="p">(</span><span class="dl">"</span><span class="s2">확인 문구</span><span class="dl">"</span><span class="p">))</span> <span class="p">{</span>
      <span class="nx">yes를</span> <span class="nx">선택할</span> <span class="nx">경우</span><span class="p">(</span><span class="nx">true인</span> <span class="nx">경우</span><span class="p">)</span> <span class="nx">실행할</span> <span class="nx">코드</span>
  <span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Reyna</name></author><category term="main project" /><category term="project" /><category term="codestates" /><category term="page" /><category term="react" /><summary type="html"><![CDATA[board]]></summary></entry><entry><title type="html">[Main Project] 03. user page 구성</title><link href="http://localhost:4000/main%20project/2-user-page/" rel="alternate" type="text/html" title="[Main Project] 03. user page 구성" /><published>2023-02-03T00:00:00+09:00</published><updated>2023-02-03T00:00:00+09:00</updated><id>http://localhost:4000/main%20project/2-user-page</id><content type="html" xml:base="http://localhost:4000/main%20project/2-user-page/"><![CDATA[<h2 id="1-라우팅">1. 라우팅</h2>

<p>유저 프로필 페이지와 프로필 수정 페이지로 나누었다.</p>

<p><code class="language-plaintext highlighter-rouge">memberId</code>를 파라미터로 넣어 유저를 식별할 수 있도록 만들었다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//app.js</span>

<span class="k">import</span> <span class="p">{</span> <span class="nx">useEffect</span><span class="p">,</span> <span class="nx">useState</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Route</span><span class="p">,</span> <span class="nx">Routes</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-router-dom</span><span class="dl">'</span><span class="p">;</span>

<span class="k">import</span> <span class="nx">UserProfile</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./Pages/UserProfile</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">UserProfileEdit</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./Pages/UserProfileEdit</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">function</span> <span class="nx">App</span><span class="p">()</span> <span class="p">{</span>

    <span class="p">...</span>

  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;&gt;</span>
      <span class="o">&lt;</span><span class="nx">Routes</span><span class="o">&gt;</span>
       <span class="p">...</span>
        <span class="o">&lt;</span><span class="nx">Route</span> <span class="nx">path</span><span class="o">=</span><span class="dl">"</span><span class="s2">/user/:memberId</span><span class="dl">"</span> <span class="nx">element</span><span class="o">=</span><span class="p">{</span><span class="o">&lt;</span><span class="nx">UserProfile</span> <span class="o">/&gt;</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="nx">Route</span> <span class="nx">path</span><span class="o">=</span><span class="dl">"</span><span class="s2">/user/:memberId/edit</span><span class="dl">"</span> <span class="nx">element</span><span class="o">=</span><span class="p">{</span><span class="o">&lt;</span><span class="nx">UserProfileEdit</span> <span class="o">/&gt;</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>       <span class="p">...</span>
      <span class="o">&lt;</span><span class="sr">/Routes</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/</span><span class="err">&gt;
</span>  <span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="2-유저-프로필-페이지">2. 유저 프로필 페이지</h2>

<p>유저의 기본적인 프로필 조회, 작성한 여행과 게시글을 볼 수 있는 페이지. 여행과 게시글은 <code class="language-plaintext highlighter-rouge">main</code> 페이지와 마찬가지로 컴포넌트를 재사용했다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//UserProfile.js</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">useNavigate</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">react-router-dom</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">navigate</span> <span class="o">=</span> <span class="nx">useNavigate</span><span class="p">();</span>

<span class="o">&lt;</span><span class="nx">button</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">navigate</span><span class="p">(</span><span class="s2">`/user/</span><span class="p">${</span><span class="nx">memberId</span><span class="p">}</span><span class="s2">/edit`</span><span class="p">)}</span><span class="o">&gt;</span>
  <span class="nx">Edit</span> <span class="nx">profile</span>
<span class="o">&lt;</span><span class="sr">/button&gt;</span><span class="err">;
</span></code></pre></div></div>

<p>페이지 이동은 <code class="language-plaintext highlighter-rouge">useNavigate</code>를 사용했다.</p>

<h2 id="3-유저-프로필-수정-페이지">3. 유저 프로필 수정 페이지</h2>

<h3 id="이미지-이름-비밀번호-수정">이미지, 이름, 비밀번호 수정</h3>

<p>수정 페이지에서는 유저 프로필 이미지와 이름 수정, 비밀번호 변경, 회원 탈퇴가 가능하다. 각 기능은 탭으로 구분하고, 탈퇴의 경우 모달 창을 띄우는 방식으로 구현했다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//UserProfileEdit.js</span>
  <span class="kd">const</span> <span class="p">[</span><span class="nx">currentTab</span><span class="p">,</span> <span class="nx">clickTab</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>

    <span class="kd">const</span> <span class="nx">menuArr</span> <span class="o">=</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">General</span><span class="dl">'</span><span class="p">,</span>
      <span class="na">content</span><span class="p">:</span> <span class="p">(</span>
        <span class="o">&lt;</span><span class="nx">General</span>
          <span class="nx">handleChange</span><span class="o">=</span><span class="p">{</span><span class="nx">handleChange</span><span class="p">}</span>
          <span class="nx">handleSubmit</span><span class="o">=</span><span class="p">{</span><span class="nx">handleSubmit</span><span class="p">}</span>
          <span class="nx">nameRef</span><span class="o">=</span><span class="p">{</span><span class="nx">nameRef</span><span class="p">}</span>
        <span class="sr">/</span><span class="err">&gt;
</span>      <span class="p">),</span>
    <span class="p">},</span>
    <span class="p">{</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Password</span><span class="dl">'</span><span class="p">,</span> <span class="na">content</span><span class="p">:</span> <span class="o">&lt;</span><span class="nx">Password</span> <span class="o">/&gt;</span> <span class="p">},</span>
  <span class="p">];</span>

    <span class="kd">const</span> <span class="nx">selectMenuHandler</span> <span class="o">=</span> <span class="nx">index</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">clickTab</span><span class="p">(</span><span class="nx">index</span><span class="p">);</span>
  <span class="p">};</span>

  <span class="p">...</span>

  <span class="k">return</span><span class="p">(</span>
    <span class="p">...</span>
        <span class="p">{</span><span class="nx">menuArr</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">el</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">(</span> <span class="c1">//sidebar list</span>
          <span class="o">&lt;</span><span class="nx">li</span>
            <span class="nx">key</span><span class="o">=</span><span class="p">{</span><span class="nx">el</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span>
            <span class="nx">className</span><span class="o">=</span><span class="p">{</span><span class="nx">index</span> <span class="o">===</span> <span class="nx">currentTab</span> <span class="p">?</span> <span class="dl">'</span><span class="s1">submenu focused</span><span class="dl">'</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">submenu</span><span class="dl">'</span><span class="p">}</span>
            <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="p">{</span>
              <span class="nx">selectMenuHandler</span><span class="p">(</span><span class="nx">index</span><span class="p">);</span>
            <span class="p">}}</span>
          <span class="o">&gt;</span>
            <span class="p">{</span><span class="nx">el</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span>
          <span class="o">&lt;</span><span class="sr">/li</span><span class="err">&gt;
</span>        <span class="p">))}</span>
    <span class="p">...</span>
       <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">className</span><span class="o">=</span><span class="dl">"</span><span class="s2">main__content</span><span class="dl">"</span><span class="o">&gt;</span><span class="p">{</span><span class="nx">menuArr</span><span class="p">[</span><span class="nx">currentTab</span><span class="p">].</span><span class="nx">content</span><span class="p">}</span><span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>  <span class="p">)</span>
</code></pre></div></div>

<p>왼쪽 사이드바에 목록이 있고, 선택한 목록의 <code class="language-plaintext highlighter-rouge">index</code>를 <code class="language-plaintext highlighter-rouge">currentTab</code>에 저장하여 선택된 탭의 <code class="language-plaintext highlighter-rouge">content</code>가 우측에 나타난다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//UserProfileEdit.js</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">DeleteAccount</span><span class="p">,</span> <span class="nx">General</span><span class="p">,</span> <span class="nx">Password</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">../Components/user/Tab</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">content</code>는 <code class="language-plaintext highlighter-rouge">Tab</code> 컴포넌트로 따로 만들어서 불러왔다.</p>

<h3 id="회원-탈퇴">회원 탈퇴</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//UserProfileEdit.js</span>
<span class="kd">const</span> <span class="p">[</span><span class="nx">modal</span><span class="p">,</span> <span class="nx">setModal</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>
 <span class="p">...</span>
  <span class="o">&lt;</span><span class="nx">li</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">setModal</span><span class="p">(</span><span class="kc">true</span><span class="p">)}</span><span class="o">&gt;</span><span class="nx">Delete</span> <span class="nx">account</span><span class="o">&lt;</span><span class="sr">/li&gt; /</span><span class="o">/</span><span class="nx">sidebar</span> <span class="nx">list</span>

  <span class="o">&lt;</span><span class="nx">li</span><span class="o">&gt;</span>
    <span class="o">&lt;</span><span class="nx">DeleteAccount</span> <span class="nx">modal</span><span class="o">=</span><span class="p">{</span><span class="nx">modal</span><span class="p">}</span> <span class="nx">setModal</span><span class="o">=</span><span class="p">{</span><span class="nx">setModal</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>  <span class="o">&lt;</span><span class="sr">/li</span><span class="err">&gt;
</span></code></pre></div></div>

<p>모달 상태를 <code class="language-plaintext highlighter-rouge">UserProfileEdit.js</code>에서 관리한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//users.Tab.js, DeleteAccount</span>
<span class="o">&lt;&gt;</span>
  <span class="p">{</span><span class="nx">modal</span> <span class="p">?</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">Modal</span>
      <span class="nx">setModal</span><span class="o">=</span><span class="p">{</span><span class="nx">setModal</span><span class="p">}</span>
      <span class="nx">buttonName</span><span class="o">=</span><span class="dl">"</span><span class="s2">Delete account</span><span class="dl">"</span>
      <span class="nx">handleClick</span><span class="o">=</span><span class="p">{</span><span class="nx">handleDeleteAccount</span><span class="p">}</span>
    <span class="sr">/</span><span class="err">&gt;
</span>  <span class="p">)</span> <span class="p">:</span> <span class="kc">null</span><span class="p">}</span>
<span class="o">&lt;</span><span class="sr">/</span><span class="err">&gt;
</span></code></pre></div></div>

<p>모달상태를 내려받아 <code class="language-plaintext highlighter-rouge">modal</code>이 <code class="language-plaintext highlighter-rouge">true</code>일 때만 열린다.</p>]]></content><author><name>Reyna</name></author><category term="main project" /><category term="project" /><category term="codestates" /><category term="page" /><category term="react" /><summary type="html"><![CDATA[user page]]></summary></entry><entry><title type="html">[Github Blog] Github 블로그 폰트 변경하기</title><link href="http://localhost:4000/blog/font/" rel="alternate" type="text/html" title="[Github Blog] Github 블로그 폰트 변경하기" /><published>2023-02-02T00:00:00+09:00</published><updated>2023-02-02T00:00:00+09:00</updated><id>http://localhost:4000/blog/font</id><content type="html" xml:base="http://localhost:4000/blog/font/"><![CDATA[<h3 id="font-선택하기">font 선택하기</h3>

<hr />

<p><a href="https://noonnu.cc/">눈누</a>나 <a href="https://fonts.google.com/">Google Fonts</a>에서 마음에 드는 폰트를 선택한다.</p>

<h3 id="사용하기">사용하기</h3>

<hr />

<p><code class="language-plaintext highlighter-rouge">main.scss</code> 에 붙여 넣고 <code class="language-plaintext highlighter-rouge">_variables.scss</code>에서 선언한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">$serif</span><span class="p">:</span> <span class="nx">Georgia</span><span class="p">,</span> <span class="nx">Times</span><span class="p">,</span> <span class="nx">serif</span> <span class="o">!</span><span class="k">default</span><span class="p">;</span>
</code></pre></div></div>

<p>사용하고 싶은 곳에서 변수처럼 사용하면 된다.</p>]]></content><author><name>Reyna</name></author><category term="blog" /><category term="Blog" /><category term="Github" /><category term="Font" /></entry></feed>